
BrawlBox Data Viewer - Version 0.60
Copyright © 2009 - Bryan Moulton

This program is provided as-is without any warranty, implied or otherwise.
By using this program, the end user agrees to take full responsibility
regarding its proper and lawful use. The authors/hosts/distributors cannot be 
held responsible for any damage resulting in the use of this program, nor can 
they be held accountable for the manner in which it is used.

-Yet another program based on BrawlLib-

For bug reports, support, and the latest version, check out our forum post at SmashBoards.com!
http://www.smashboards.com/showthread.php?t=238861


 ====================================
|************ Change Log ************|
 ====================================

- v0.60 - (11/24/2009)
	. Added tons of features to model editor, including:
		Animation previewer/editor.
		Improved model editor features/controls.
		Improved OpenGL initialization/support.
	. Fixed a bug that was causing PAC files to export uncompressed regardless of setting.
	. Fixed a bug in the CHR0 decoder.
	. Most new features are library improvements. Please see BrawlLib.txt for more details.

- v0.59 - (11/08/2009)
	. Re-added settings dialog.
	. Various menu improvements/features.
	. CHR0 entries can now be manipulated.
	. Added editor for CHR0 keyframes.
	. Added editor for MSBin messages.
	. Re-added RSAR support with new organization. (No audio features yet)
	. Improved CMPR algorithm using modified code from the NVidia Texture Tools.
	. Lowered OpenGL version to 1.1, and changed the way mipmaps are generated.

- v0.58b- (10/24/2009)
	. Re-integration with BrawlLib is nearly complete. Audio support still isn't finished.
	. Added support for the following new controls from BrawlLib:
		ModelPanel
		TextureConverterDialog
	. New menu system.
	. Due to new rebuild enhancements, nodes can now be created, renamed, and deleted.

- v0.58 - (09/29/2009)
	. Name has changed to BrawlBox (previously SmashBox)
	. Program has been separated, allowing for the creation of BrawlLib.
	. Now has minor Linux support.
	. Audio nodes/controls have been temporarily disabled until BrawlLib can be updated.
	. You can now use SaveAs on the current working file, so long as changes have been made.

- v.057 - (08/23/2009)
	. Added support for brstm files.
	. Increased support for brsar audio packages.
	. Added audio playback control for use with brsar and brstm files.
	. Added the ability to export audio to .wav format.

- v0.56 - (08/09/2009)
	. Added support for TGA images.
	. Re-wrote the LZ77 algorithm for increased speed.
	. Due to compatibility problems with paletted images and transparent colors. All images are now exported in 32-bit format.

- v0.55b - (08/04/2009)
	. Fixed a bug that was causing unknown files to disappear entirely. (Thanks lavamage)
	. Fixed a bug with pre-paletted textures that was causing them to recreate the palette improperly. (Thanks kid craft 24/sonic master)
	. Added a progress bar for those long compression jobs.
	. Discovered another portion of model files that needs an entry in the BRES string table.
	. The texture replacer will now default to the original texture/palette/mip settings.

- v0.55 - (08/03/2009)
	. Fixed various issues with Common pac files.
	. Fixed an issue with certain compressed files. Character selection portraits are now supported.
	. Added support for more image formats (bmp, gif, jpg, still waiting on TGA)
	. Started incorporating change tracking which offers improvements such as:
		a. Active discovery; Nodes will only be interpreted as they are browsed. Helps with large/embedded files.
		b. Only portions of the tree that have changed will be re-built. 
		c. Unchanged nodes will be copied back as-is. This helps with speed and compatibility.
	. Removed Managed DirectX 9 dependency. Was causing assembly problems.
	. Added child-only properties

- v0.54 - (08/01/2009)
	. Fixed a bug during texture replacing that was causing problems in some files (common pacs).
	. Added various improvements to MDL0 file browsing.
	. Confirmed successful rebuilding of 'common' files.

- v0.53b - (07/29/2009)
	. Fixed a bug dealing with vertex/color data types by removing vertex parsing.

- v0.53 - (07/25/2009)
	. Added minor support for the following brres resources (fixes some texture replacing issues):
		a. AnmVis (VIS0)
		b. AnmScn (SCN0)
		c. AnmTexShp (SHP0)
		d. AnmTexSrt (SRT0)
		e. AnmTexPat (PAT0)
	. Confirmed successful rebuilding of stage files.

- v0.52c - (07/23/2009)
	. Added some support for CHR0 and CLR0 animations.
	. A bit more support for MDL0 files (can browse data info)
	. Fixed an issue with character files with transformations.

- v0.52b - (07/17/2009)
	. Fixed a few small bugs with brres generation.
	. Confirmed texture replacement works, so long as the same texture format is used.

- v0.52 - (07/16/2009)
	. All texture formats are now supported for replacing.
	. Texture replacer has been updated to allow indexed textures.
	. Nodes can now be inserted/deleted/moved.
	. Added some support for MDL0 and brsar files. (Entry viewing only)
	. Remade node structure (again). Archives are rebuilt entirely when they are saved.
	. PCS files compress a little faster.
	. Added About window.

- v0.51 - (06/28/2009)
	. Texture replacing works fairly well, still doesn't support indexed textures.
	. Program can display/generate mipmaps. (Use the arrows on the preview panel to change mip level)
	. Node move/resize functions, allows for better data replacement
	. PCS entries are now re-packed before saving
	. Embedded PCS nodes are better supported
	
- v0.50 - (06/23/2009)
	. Original release


 ====================================
|*********** Requirements ***********|
 ====================================
 
* Microsoft .Net Framework v3.5 SP1
	http://www.microsoft.com/downloads/details.aspx?FamilyID=ab99342f-5d1a-413d-8319-81da479ab0d7&displaylang=en
	
* A video card that supports OpenGL 1.1 or higher.


 ====================================
|************ How to Use ************|
 ====================================
	
	Model editor:

To navigate around in the model viewer, use these controls:
	Right mouse button 		- Hold to pan
	Ctrl + Right mouse		- Hold to rotate
	Mouse wheel				- Zoom
	Arrow keys				- Pan
	Ctrl + Arrow keys		- Rotate
	+, - keys				- Zoom

There are various control panels that are hidden in the model viewer.
You'll notice that when you press one of the bars along the border of the window,
these controls will expand allowing greater control over the content.

To load an external file for use in the model editor:
	1. Expand the animation panel by clicking on the bar at the right side of the window.
	2. Click the Load button or click the path bar to open the file dialog.
	3. Find a file you want to load (most likely FitMotion) and open it.
	4. The animation list will now populate, and include animations found in both files.
	5. Textures found in the external file will automatically reload to allow viewing.

Animation playback controls:
	1. Expand the playback panel by clicking on the bar at the bottom of the window.
	2. Take note of the controls listed here and their functions:
		Speed	- Playback speed of animation preview (in frames /sec).
		Loop	- When checked, the animation will loop back to the beginning while playing.
		Play	- Starts/stops animation playback.
		Frame	- Current animation frame. The text to the right will show how many total frames 
				  are in the animation. Frame 0 is always the neutral (bind pose) frame.
		< >		- These buttons traverse frames forwards and backwards.
		*Tip: for better frame control, select the Frame box and use the up/down arrow keys.
	3. Playback will automatically reset to frame #1 when an animation is selected.

Texture controls:
	1. Expand the asset panel by clicking on the bar at the left side of the window.
	2. The textures are listed at the bottom of the asset panel.
	3. Selecting a texture will highlight it in the preview.
	4. Checking/unckecking a texture will show/hide that texture in the preview.
	5. Right-clicking a texture brings up a context menu, which offers more commands:
		Source	- Lists the location the texture was loaded from.
		Size	- Size of the texture.
		View	- Allows for viewing the texture in a pop-up window.
		Replace	- Opens the advanced texture replacer. (Only for embedded textures)
		Export	- Exports the texture to a file. (Only for embedded textures)
		Reload	- Attempts to reload a texture (useful when using texture files directly)
	6. Press Esc while in the texture list to deselect the current item.

Bone controls:
	1. Expand the asset panel by clicking on the bar at the left side of the window.
	2. Bones are listed in the center of the asset panel.
	3. Selecting a bone will highlight it in the preview (must be visible of course).
	4. Checking/unchecking a bone will show/hide it and any child bones in the preview.
	5. Selecting a bone will populate the transformation controls in the animation panel (right side).
	6. Press Esc while in the bone list to deselect the current item.

Polygon controls:
	1. Expand the asset panel by clicking on the bar at the left side of the window.
	2. Polygons are listed in the top of the asset panel.
	3. Toggling a polygon will switch between show/wireframe/hide modes.
	4. Press Esc while in the polygon list to deselect the current item.


	Animation Editing:

	- Once you have loaded a model and some animations, you're ready to begin changing animations.
	- Select an animation and advance to the frame(s) you want to change.
	- Using the bone list, find the bone you want to change. (Hide the polygons to view bones better)
	- You'll notice that as you select different bones the transformation values at the bottom of the
		animation frame will change. 
	- These reflect the current state of the selected bone during that frame.
	- As you advance through the frames, these values will change, giving you a numerical
		representation of the bone's state during an animation.
	- You'll notice that some of these boxes will turn yellow during an animation sequence. These are keyframes.
	- Keyframes are the most important aspect of animation editing, and understanding them is 'key'. (ha!)
	- Instead of trying to explain them in detail, let me give some examples:
		When you change a value in the editor, the box will turn yellow. This means you've created a keyframe.
		As you step back and forth through the animation, you'll notice that other frames lead to/from this value.
		If one frame is 'keyed' to 10 and another is 'keyed' to 30, all frames between them are spread out evenly.
		This means that the frames will slowly step up or down to the next keyframe.
		If a keyframe changes, so do all the values before/after it (until another keyframe is reached).
		The same happens when a keyframe is deleted.
	- Whew! I hope that made sense. If not, the best way to learn is by playing with the editor.
		Once you see how it works, it's not very difficult at all.

Editing controls:
	- To create/change a keyframe, all you have to do is change the value in the box.
	- Changes are applied either when you leave the box or by pressing Enter.
	- Changes can be cancelled by pressing the Esc key.
	- A keyframe can be deleted by clearing the box entirely.

Transformation values (huh?):
	- A bone can be 'transformed' or changed by using three distinct values: Scale, Rotation and Translation
	- Scale will make any child bones larger or smaller depending on the value.
		Think of it like a multiplier, in terms of percentages: 0.5 = 50%, 1.0 = 100%, 2.0 = 200%.
		When you change the scale, you will most likely change all three values (x,y,z). Otherwise it looks odd.
	- Rotation is pretty much the soul of animation. It allows bones to rotate around eachother.
		If you put a stick on a ball and rolled it, the stick would rotate around the ball.
		As a bone/node is 'rotated', anything attached to that structure will move as well.
	- Translation is a spatial movement from one point to another.
		You will most likely not have to touch this, because doing so may stretch the bones.
		The same movement can be achieved through rotation: just change the parent node.

	- All three of these values can be changed along three axis: x, y, and z.
	- Think back to geometry and graphing:
		The X axis moves from left to right across the screen. Left being negative, right being positive.
		The Y axis moves from bottom to top. Down being negative, up being positive.
		The Z axis moves from near to far. Near being negative, far being positive.
	- Each node has axis indicators which may help determine the state of a node:
		X is red, Y is green, Z is blue.
		The direction of these lines denotes the pisitive direction of each axis.

	- Transformation values are applied in the following order:
		Translation	- A new node is created at an absolute location, relative to the previous/parent.
					  This creates a bone, which is simply a line between one node and the next.
		Rotation	- The new node is rotated, which also rotates any attached bones/nodes.
					  This rotation does not affect the newly created bone.
		Scale		- A scale/multiplier is applied, which affects all child nodes and geometry.

	-Once again, if this doesn't make sense just play around with it. You'll get it eventually.

Editing tips:
	- Use cut/copy/paste for quick keyframe moving.
	- Toggle wireframe mode to see how bones affect the polygons.
	- Change one rotation value at a time and see how it affects the model.
	- Textures are automatically loaded from the same directory as the file.
		Extract all the textures/models to the same directory (with extract all).
		Open the model file, and it will then load the extracted textures.
		When you make changes to a texture, use the reload feature to see the changes.
		Textures no longer have to be replaced to see how it affects the model, just reload them.
		When you're done, open the original file and use the Replace All feature.

 ====================================
|*********** Known Issues ***********|
 ====================================

* Not all nodes can be replaced properly! However, most can be extracted for hex editing.

* Audio integration is still incomplete.

* Need to implement better image quantization.


 ====================================
|********* Acknowledgements *********|
 ====================================

Super Smash Brothers Brawl is copyrighted property - © 2008 Nintendo and HAL Laboratory, Inc.

Characters are copyrighted by the following:
© Nintendo / HAL Laboratory, Inc. / Pokemon / Creatures Inc. / GAME FREAK Inc. / SHIGESATO ITOI / 
APE Inc. / INTELLIGENT SYSTEMS / Konami Digital Entertainment Co., Ltd. / SEGA

